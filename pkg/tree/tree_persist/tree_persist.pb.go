// Copyright 2025 Nokia
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: tree_persist.proto

package tree_persist

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Intent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntentName string       `protobuf:"bytes,1,opt,name=intent_name,json=intentName,proto3" json:"intent_name,omitempty"`
	Root       *TreeElement `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	Priority   int32        `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Deviation  bool         `protobuf:"varint,4,opt,name=deviation,proto3" json:"deviation,omitempty"`
}

func (x *Intent) Reset() {
	*x = Intent{}
	mi := &file_tree_persist_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Intent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Intent) ProtoMessage() {}

func (x *Intent) ProtoReflect() protoreflect.Message {
	mi := &file_tree_persist_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Intent.ProtoReflect.Descriptor instead.
func (*Intent) Descriptor() ([]byte, []int) {
	return file_tree_persist_proto_rawDescGZIP(), []int{0}
}

func (x *Intent) GetIntentName() string {
	if x != nil {
		return x.IntentName
	}
	return ""
}

func (x *Intent) GetRoot() *TreeElement {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *Intent) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Intent) GetDeviation() bool {
	if x != nil {
		return x.Deviation
	}
	return false
}

type TreeElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Childs      []*TreeElement `protobuf:"bytes,4,rep,name=childs,proto3" json:"childs,omitempty"`
	LeafVariant []byte         `protobuf:"bytes,5,opt,name=leaf_variant,json=leafVariant,proto3" json:"leaf_variant,omitempty"`
}

func (x *TreeElement) Reset() {
	*x = TreeElement{}
	mi := &file_tree_persist_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreeElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeElement) ProtoMessage() {}

func (x *TreeElement) ProtoReflect() protoreflect.Message {
	mi := &file_tree_persist_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeElement.ProtoReflect.Descriptor instead.
func (*TreeElement) Descriptor() ([]byte, []int) {
	return file_tree_persist_proto_rawDescGZIP(), []int{1}
}

func (x *TreeElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TreeElement) GetChilds() []*TreeElement {
	if x != nil {
		return x.Childs
	}
	return nil
}

func (x *TreeElement) GetLeafVariant() []byte {
	if x != nil {
		return x.LeafVariant
	}
	return nil
}

var File_tree_persist_proto protoreflect.FileDescriptor

var file_tree_persist_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x06, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x0b, 0x54, 0x72, 0x65, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x65, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x66, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x3b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tree_persist_proto_rawDescOnce sync.Once
	file_tree_persist_proto_rawDescData = file_tree_persist_proto_rawDesc
)

func file_tree_persist_proto_rawDescGZIP() []byte {
	file_tree_persist_proto_rawDescOnce.Do(func() {
		file_tree_persist_proto_rawDescData = protoimpl.X.CompressGZIP(file_tree_persist_proto_rawDescData)
	})
	return file_tree_persist_proto_rawDescData
}

var file_tree_persist_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tree_persist_proto_goTypes = []any{
	(*Intent)(nil),      // 0: tree_persist.proto.Intent
	(*TreeElement)(nil), // 1: tree_persist.proto.TreeElement
}
var file_tree_persist_proto_depIdxs = []int32{
	1, // 0: tree_persist.proto.Intent.root:type_name -> tree_persist.proto.TreeElement
	1, // 1: tree_persist.proto.TreeElement.childs:type_name -> tree_persist.proto.TreeElement
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tree_persist_proto_init() }
func file_tree_persist_proto_init() {
	if File_tree_persist_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tree_persist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tree_persist_proto_goTypes,
		DependencyIndexes: file_tree_persist_proto_depIdxs,
		MessageInfos:      file_tree_persist_proto_msgTypes,
	}.Build()
	File_tree_persist_proto = out.File
	file_tree_persist_proto_rawDesc = nil
	file_tree_persist_proto_goTypes = nil
	file_tree_persist_proto_depIdxs = nil
}
